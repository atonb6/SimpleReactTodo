{"version":3,"sources":["components/TodoItem.jsx","components/TodoList.jsx","App.jsx","index.js"],"names":["TodoItem","todo","toggleTodo","id","task","completed","type","checked","onChange","TodoList","todos","map","KEY","App","useState","setTodos","todoTaskRef","useRef","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","newTodos","find","ref","placeholder","onClick","current","value","prevTodos","uuidv4","filter","length","ReactDOM","render","document","getElementById"],"mappings":"gLAEO,SAASA,EAAT,GAAyC,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,WACrBC,EAAwBF,EAAxBE,GAAIC,EAAoBH,EAApBG,KAAMC,EAAcJ,EAAdI,UAKlB,OACI,+BACG,uBAAOC,KAAK,WAAWC,QAASF,EAAWG,SAL1B,WACpBN,EAAWC,MAKNC,KCRN,SAASK,EAAT,GAA0C,IAAtBC,EAAqB,EAArBA,MAAOR,EAAc,EAAdA,WAC9B,OACI,6BACMQ,EAAMC,KAAI,SAACV,GAAD,OACR,cAACD,EAAD,CAAwBC,KAAMA,EAAMC,WAAYA,GAAjCD,EAAKE,SCHpC,IAAMS,EAAM,gBAEL,SAASC,IACd,MAA0BC,mBAAS,CACjC,CAAEX,GAAI,EAAGC,KAAM,UAAWC,WAAW,KADvC,mBAAOK,EAAP,KAAcK,EAAd,KAIMC,EAAcC,mBAGpBC,qBAAU,WACN,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQX,IACjDO,GACCJ,EAASI,KAEd,IAEHD,qBAAU,WACRI,aAAaE,QAAQZ,EAAKQ,KAAKK,UAAUf,MACtC,CAACA,IA0BN,OACE,eAAC,WAAD,WACE,cAACD,EAAD,CAAUC,MAAOA,EAAOR,WAzBT,SAACC,GAChB,IAAMuB,EAAQ,YAAOhB,GACfT,EAAOyB,EAASC,MAAK,SAAC1B,GAAD,OAAUA,EAAKE,KAAOA,KACjDF,EAAKI,WAAaJ,EAAKI,UACvBU,EAASW,MAsBT,uBAAOE,IAAKZ,EAAaV,KAAK,OAAOuB,YAAY,gBACjD,wBAAQC,QApBU,WACpB,IAAM1B,EAAOY,EAAYe,QAAQC,MACrB,KAAT5B,IAEHW,GAAS,SAACkB,GACN,MAAM,GAAN,mBAAWA,GAAX,CAAsB,CAAE9B,GAAI+B,cAAU9B,OAAKC,WAAW,QAG1DW,EAAYe,QAAQC,MAAQ,OAY1B,oBACA,wBAAQF,QAVU,WACpB,IAAMJ,EAAWhB,EAAMyB,QAAO,SAAClC,GAAD,OAAWA,EAAKI,aAC9CU,EAAUW,IAQR,0BACA,6CAAgBhB,EAAMyB,QAAO,SAAClC,GAAD,OAAWA,EAAKI,aAAW+B,OAAxD,6BCnDNC,IAASC,OACL,cAACzB,EAAD,IAAS0B,SAASC,eAAe,W","file":"static/js/main.dc18d30f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport function TodoItem({ todo, toggleTodo }) {\r\n    const { id, task, completed } = todo;\r\n\r\n    const handleTodoClick = () => {\r\n        toggleTodo(id);\r\n    }\r\n    return (\r\n        <li>\r\n           <input type=\"checkbox\" checked={completed} onChange={handleTodoClick} />\r\n           { task }\r\n        </li>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { TodoItem } from './TodoItem'\r\n\r\nexport function TodoList({ todos, toggleTodo }) {\r\n    return (\r\n        <ul>\r\n            { todos.map((todo) => (\r\n                <TodoItem key={todo.id} todo={todo} toggleTodo={toggleTodo} />\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n","import React, { Fragment, useState, useRef, useEffect } from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport { TodoList } from \"./components/TodoList\";\r\n\r\nconst KEY = \"todoApp.todos\"\r\n\r\nexport function App() {\r\n  const [todos, setTodos] = useState([\r\n    { id: 1, task: \"Tarea 1\", completed: false },\r\n  ]);\r\n\r\n  const todoTaskRef = useRef();\r\n\r\n\r\n  useEffect(() =>{\r\n      const storedTodos = JSON.parse(localStorage.getItem(KEY))\r\n      if(storedTodos){\r\n          setTodos(storedTodos);\r\n      }\r\n  }, []);\r\n\r\n  useEffect(() =>{\r\n    localStorage.setItem(KEY, JSON.stringify(todos));\r\n    }, [todos]);\r\n\r\n\r\n  const toggleTodo = (id) =>{\r\n      const newTodos = [...todos];\r\n      const todo = newTodos.find((todo) => todo.id === id);\r\n      todo.completed = !todo.completed;\r\n      setTodos(newTodos);\r\n  }\r\n\r\n  const handleTodoAdd = () =>{\r\n    const task = todoTaskRef.current.value;\r\n    if(task === '') return;\r\n\r\n    setTodos((prevTodos) => {\r\n        return [...prevTodos, { id: uuidv4(), task,completed: false }]\r\n    })\r\n\r\n    todoTaskRef.current.value = null;\r\n  };\r\n\r\n  const handeClearAll = () => {\r\n    const newTodos = todos.filter((todo) => !todo.completed);\r\n    setTodos (newTodos);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <TodoList todos={todos} toggleTodo={toggleTodo} />\r\n      <input ref={todoTaskRef} type=\"text\" placeholder=\"Nueva Tarea\" />\r\n      <button onClick={handleTodoAdd}>âž•</button>\r\n      <button onClick={handeClearAll}>ðŸ—‘</button>\r\n      <div>Te quedan {todos.filter((todo) => !todo.completed).length } tareas por terminar</div>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n    <App />, document.getElementById(\"root\")\r\n);"],"sourceRoot":""}